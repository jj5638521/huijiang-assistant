name: Update rules index

on:
  push:
    paths:
      - 'rules/01_工资模块_latest.md'
  release:
    types: [published]
  workflow_dispatch: {}   # 手动运行按钮

concurrency:
  group: update-rules-index
  cancel-in-progress: false

jobs:
  bump-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write         # 允许读取/写入仓库内容（给 PR 用）
      pull-requests: write    # 允许创建/更新 PR（关键）
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure UTF-8
        run: |
          echo "LANG=C.UTF-8"  >> $GITHUB_ENV
          echo "LC_ALL=C.UTF-8" >> $GITHUB_ENV

      - name: Read version from latest（识别 vYYYY-MM-DDR? 可带 -HFx）
        id: v
        shell: bash
        run: |
          set -euo pipefail
          f="rules/01_工资模块_latest.md"
          # 兼容：'版本 v2025-09-17R7' 或 '版本 v2025-09-17R7-HF2'
          ver=$(grep -E -m1 '^[[:space:]]*版本[[:space:]]*[:：]?[[:space:]]*v[0-9]{4}-[0-9]{2}-[0-9]{2}R[0-9]+(-HF[0-9]+)?' "$f" \
                | sed -E 's/.*(v[0-9]{4}-[0-9]{2}-[0-9]{2}R[0-9]+(-HF[0-9]+)?).*/\1/')
          if [ -z "${ver:-}" ]; then
            echo "❌ 未在 latest 中解析到版本号（期望形如 v2025-09-17R7 或 v2025-09-17R7-HF2）" >&2
            exit 1
          fi
          # README 的“当前生效版本 → ”不带 v，需要一个脱 v 版本
          disp="${ver#v}"
          echo "ver=$ver"   >> "$GITHUB_OUTPUT"
          echo "disp=$disp" >> "$GITHUB_OUTPUT"
          echo "✅ 解析到版本：$ver（显示用：$disp）"

      - name: Patch rules/README.md（版本与实体都更新，支持 -HFx）
        id: patch
        shell: bash
        run: |
          set -euo pipefail
          v='${{ steps.v.outputs.ver }}'
          d='${{ steps.v.outputs.disp }}'
          readme="rules/README.md"

          if [ ! -f "$readme" ]; then
            echo "❌ 缺少 $readme" >&2
            exit 1
          fi

          # 1) “当前生效版本”展示行：01_工资模块 → 2025-09-17R7(-HFx)
          sed -i -E "s/(01_工资模块[[:space:]]*→[[:space:]]*)[0-9]{4}-[0-9]{2}-[0-9]{2}R[0-9]+(-HF[0-9]+)?/\\1${d}/" "$readme"

          # 2) 实体链接：./01_工资模块_v2025-09-17R7(-HFx).md
          sed -i -E "s#\\(\\./01_工资模块_v[0-9]{4}-[0-9]{2}-[0-9]{2}R[0-9]+(-HF[0-9]+)?\\.md\\)#(./01_工资模块_${v}.md)#" "$readme"

          # 3) 指针链接（防止文件名被手动改动导致未匹配）
          # 这行一般是：指针： 01_工资模块_latest.md（链接不变，仅确保存在）
          # 无需改动 URL，只要 README 结构不变即可

          if git diff --quiet -- "$readme"; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️ README 没有可写入的差异。"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "✅ README 已写入新版本：$v"
          fi

      # 不再直推 main（保护分支会拦截），改为创建/更新 PR
      - name: Create/Update Pull Request（通过 PR 更新索引）
        id: cpr
        if: steps.patch.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/bump-rules-index
          base: main
          commit-message: "docs(rules): bump index to ${{ steps.v.outputs.ver }}"
          title: "docs(rules): bump index to ${{ steps.v.outputs.ver }}"
          body: |
            自动更新规则索引：
            - 当前生效版本：${{ steps.v.outputs.disp }}
            - 实体：`01_工资模块_${{ steps.v.outputs.ver }}.md`
          labels: rules-index, bot
          signoff: false
          delete-branch: true

      - name: Enable auto-merge（开启自动合并）
        if: steps.cpr.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        # 默认 merge-method 走仓库设置（建议用“压缩合并”）

      - name: PR info
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "已创建/更新 PR 编号：#${{ steps.cpr.outputs.pull-request-number }}"
          echo "当所有必需检查通过后会自动合并。"
